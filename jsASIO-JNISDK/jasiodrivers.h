/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_groovemanager_spi_asio_AsioDrivers */

#ifndef _Included_com_groovemanager_spi_asio_AsioDrivers
#define _Included_com_groovemanager_spi_asio_AsioDrivers
#ifdef __cplusplus
extern "C" {
#endif
#undef com_groovemanager_spi_asio_AsioDrivers_MAX_DRIVERS
#define com_groovemanager_spi_asio_AsioDrivers_MAX_DRIVERS 50L
/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    testMethod
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_testMethod
  (JNIEnv *, jobject);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    loadDriver
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_loadDriver
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    prepareDriverNames
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_prepareDriverNames
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    getDriverName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_getDriverName
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    getCurrentDriverName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_getCurrentDriverName
  (JNIEnv *, jobject);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    getCurrentDriverIndex
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_getCurrentDriverIndex
  (JNIEnv *, jobject);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    removeCurrentDriver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_removeCurrentDriver
  (JNIEnv *, jobject);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    createClass
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_createClass
  (JNIEnv *, jobject);

/*
 * Class:     com_groovemanager_spi_asio_AsioDrivers
 * Method:    cleanUp
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_groovemanager_spi_asio_AsioDrivers_cleanUp
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
